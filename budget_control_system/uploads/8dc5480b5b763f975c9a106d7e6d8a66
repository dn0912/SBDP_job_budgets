{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "CleanupLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/lambda-gsd-index-calculator-dev-cleanup"
      }
    },
    "CalculateLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/lambda-gsd-index-calculator-dev-calculate"
      }
    },
    "Calculate5LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/lambda-gsd-index-calculator-dev-calculate5"
      }
    },
    "Preprocess1kLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/lambda-gsd-index-calculator-dev-preprocess1k"
      }
    },
    "Calculate1kLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/lambda-gsd-index-calculator-dev-calculate1k"
      }
    },
    "StartDashjobLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/lambda-gsd-index-calculator-dev-start-job"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "lambda-gsd-index-calculator",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lambda-gsd-index-calculator-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lambda-gsd-index-calculator-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:PutObject",
                    "s3:ListBucket",
                    "s3:DeleteObject"
                  ],
                  "Resource": [
                    "arn:aws:s3:::test-task-update-data-v1",
                    "arn:aws:s3:::test-task-update-data-v1/*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "apigateway:POST"
                  ],
                  "Resource": [
                    "arn:aws:apigateway:::/*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:*"
                  ],
                  "Resource": [
                    "arn:aws:sqs:*:*:PreprocessedDataQueue"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": [
                    "arn:aws:lambda:eu-central-1:*:function:*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "xray:PutTraceSegments",
                    "xray:PutTelemetryRecords",
                    "xray:GetSamplingRules",
                    "xray:GetSamplingTargets",
                    "xray:GetSamplingStatisticSummaries"
                  ],
                  "Resource": [
                    "*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "xray:PutTraceSegments",
                    "xray:PutTelemetryRecords"
                  ],
                  "Resource": [
                    "*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "PreprocessedDataQueue",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "lambda-gsd-index-calculator",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "CleanupLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/lambda-gsd-index-calculator/dev/1598563789312-2020-08-27T21:29:49.312Z/lambda-gsd-index-calculator.zip"
        },
        "FunctionName": "lambda-gsd-index-calculator-dev-cleanup",
        "Handler": "src/helper.cleanup",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 30,
        "Description": "cleanup S3 directories",
        "TracingConfig": {
          "Mode": "Active"
        },
        "Environment": {
          "Variables": {
            "BUCKET": "test-task-update-data-v1",
            "SUBRESULT_FOLDER": "test_results",
            "PIPELINE_RESULT_FOLDER": "gsd"
          }
        }
      },
      "DependsOn": [
        "CleanupLogGroup"
      ]
    },
    "CleanupLambdaVersion4XCJ6oYYrLM1ESLFvOK3AFrlNQb3emShlaer7LLqs": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CleanupLambdaFunction"
        },
        "CodeSha256": "+6qZKA25Ii72Z6bDIlT6RgHTAlGrAFmzayql+VWmVr0=",
        "Description": "cleanup S3 directories"
      }
    },
    "CalculateLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/lambda-gsd-index-calculator/dev/1598563789312-2020-08-27T21:29:49.312Z/lambda-gsd-index-calculator.zip"
        },
        "FunctionName": "lambda-gsd-index-calculator-dev-calculate",
        "Handler": "handler.calculateGSDIndex",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 30,
        "Description": "Single lambda - reads S3 file, filters and calculates GSD index function in one run",
        "TracingConfig": {
          "Mode": "Active"
        },
        "Environment": {
          "Variables": {
            "BUCKET": "test-task-update-data-v1",
            "FILE": "test_pretty.json"
          }
        }
      },
      "DependsOn": [
        "CalculateLogGroup"
      ]
    },
    "CalculateLambdaVersionB5Yk4tBBuwtmW7MuKvsvcA0jElO0d6Y12CmA48AJbM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CalculateLambdaFunction"
        },
        "CodeSha256": "+6qZKA25Ii72Z6bDIlT6RgHTAlGrAFmzayql+VWmVr0=",
        "Description": "Single lambda - reads S3 file, filters and calculates GSD index function in one run"
      }
    },
    "Calculate5LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/lambda-gsd-index-calculator/dev/1598563789312-2020-08-27T21:29:49.312Z/lambda-gsd-index-calculator.zip"
        },
        "FunctionName": "lambda-gsd-index-calculator-dev-calculate5",
        "Handler": "handler.calculateGSDIndex",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 30,
        "Description": "Same as calculate function: Single lambda - 1. reads S3 file (data consists of only 5 tasks + tasks updates), 2. filters and 3. calculates GSD index function - test data consists of 5 tasks\n",
        "TracingConfig": {
          "Mode": "Active"
        },
        "Environment": {
          "Variables": {
            "BUCKET": "test-task-update-data-v1",
            "FILE": "test_5tasks.json"
          }
        }
      },
      "DependsOn": [
        "Calculate5LogGroup"
      ]
    },
    "Calculate5LambdaVersionea764W4ukvHV3CbESlRiRPhvHOz2OWTiBfdHkrql7dI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "Calculate5LambdaFunction"
        },
        "CodeSha256": "+6qZKA25Ii72Z6bDIlT6RgHTAlGrAFmzayql+VWmVr0=",
        "Description": "Same as calculate function: Single lambda - 1. reads S3 file (data consists of only 5 tasks + tasks updates), 2. filters and 3. calculates GSD index function - test data consists of 5 tasks\n"
      }
    },
    "Preprocess1kLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/lambda-gsd-index-calculator/dev/1598563789312-2020-08-27T21:29:49.312Z/lambda-gsd-index-calculator.zip"
        },
        "FunctionName": "lambda-gsd-index-calculator-dev-preprocess1k",
        "Handler": "src/preprocesser.readAndFilterFile",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 30,
        "Description": "Preprocess lambda which sends SQS message afterwards: preprocess task update data (test data consists of 1000 tasks)\n",
        "TracingConfig": {
          "Mode": "Active"
        },
        "Environment": {
          "Variables": {
            "BUCKET": "test-task-update-data-v1",
            "FILE": "test_with_description_title_change_1000_single.json",
            "SUBRESULT_FOLDER": "test_results",
            "REGION": "eu-central-1",
            "QUEUE_NAME": "PreprocessedDataQueue"
          }
        }
      },
      "DependsOn": [
        "Preprocess1kLogGroup"
      ]
    },
    "Preprocess1kLambdaVersionl2nkkC1ZVwSHaunWcjJcGo9oikeVbK28C8aORN7lBw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "Preprocess1kLambdaFunction"
        },
        "CodeSha256": "+6qZKA25Ii72Z6bDIlT6RgHTAlGrAFmzayql+VWmVr0=",
        "Description": "Preprocess lambda which sends SQS message afterwards: preprocess task update data (test data consists of 1000 tasks)\n"
      }
    },
    "Calculate1kLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/lambda-gsd-index-calculator/dev/1598563789312-2020-08-27T21:29:49.312Z/lambda-gsd-index-calculator.zip"
        },
        "FunctionName": "lambda-gsd-index-calculator-dev-calculate1k",
        "Handler": "src/calculator.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 30,
        "Description": "Single lambda - calulator lambda after receiving sqs message, fetch cleaned up test data from S3 and calculates GSD index\n",
        "TracingConfig": {
          "Mode": "Active"
        },
        "Environment": {
          "Variables": {
            "BUCKET": "test-task-update-data-v1",
            "SUBRESULT_FOLDER": "test_results",
            "PIPELINE_RESULT_FOLDER": "gsd"
          }
        }
      },
      "DependsOn": [
        "Calculate1kLogGroup"
      ]
    },
    "Calculate1kLambdaVersionaVlUkqkb23mi6cmsmn7zvqJ1Uu2uQQtbihmnv9tjWc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "Calculate1kLambdaFunction"
        },
        "CodeSha256": "+6qZKA25Ii72Z6bDIlT6RgHTAlGrAFmzayql+VWmVr0=",
        "Description": "Single lambda - calulator lambda after receiving sqs message, fetch cleaned up test data from S3 and calculates GSD index\n"
      }
    },
    "StartDashjobLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/lambda-gsd-index-calculator/dev/1598563789312-2020-08-27T21:29:49.312Z/lambda-gsd-index-calculator.zip"
        },
        "FunctionName": "lambda-gsd-index-calculator-dev-start-job",
        "Handler": "src/job_manager.startJob",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 30,
        "Description": "Single endpoint to trigger a job\n",
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "StartDashjobLogGroup"
      ]
    },
    "StartDashjobLambdaVersiong2NQ6LJ0i0ega9pI8Vhjvhm9g5Hj9B1CClyDNRNdEHs": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "StartDashjobLambdaFunction"
        },
        "CodeSha256": "+6qZKA25Ii72Z6bDIlT6RgHTAlGrAFmzayql+VWmVr0=",
        "Description": "Single endpoint to trigger a job\n"
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-lambda-gsd-index-calculator",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceCleanup": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "cleanup",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceCalculate": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "calculate",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceCalculate5": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "calculate5",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourcePreprocess1k": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "preprocess1k",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceStartDashjob": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "start-job",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodCleanupGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceCleanup"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CleanupLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayMethodCalculateGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceCalculate"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CalculateLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayMethodCalculate5Get": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceCalculate5"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "Calculate5LambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayMethodPreprocess1kPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourcePreprocess1k"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "Preprocess1kLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayMethodStartDashjobPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceStartDashjob"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "StartDashjobLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayDeployment1598563776126": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodCleanupGet",
        "ApiGatewayMethodCalculateGet",
        "ApiGatewayMethodCalculate5Get",
        "ApiGatewayMethodPreprocess1kPost",
        "ApiGatewayMethodStartDashjobPost"
      ]
    },
    "CleanupLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CleanupLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CalculateLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CalculateLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "Calculate5LambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "Calculate5LambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "Preprocess1kLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "Preprocess1kLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "StartDashjobLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "StartDashjobLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "Calculate1kEventSourceMappingSQSPreprocessedDataQueue": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": "IamRoleLambdaExecution",
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "PreprocessedDataQueue",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "Calculate1kLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "PreprocessedDataQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "PreprocessedDataQueue"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "CleanupLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CleanupLambdaVersion4XCJ6oYYrLM1ESLFvOK3AFrlNQb3emShlaer7LLqs"
      }
    },
    "CalculateLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CalculateLambdaVersionB5Yk4tBBuwtmW7MuKvsvcA0jElO0d6Y12CmA48AJbM"
      }
    },
    "Calculate5LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "Calculate5LambdaVersionea764W4ukvHV3CbESlRiRPhvHOz2OWTiBfdHkrql7dI"
      }
    },
    "Preprocess1kLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "Preprocess1kLambdaVersionl2nkkC1ZVwSHaunWcjJcGo9oikeVbK28C8aORN7lBw"
      }
    },
    "Calculate1kLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "Calculate1kLambdaVersionaVlUkqkb23mi6cmsmn7zvqJ1Uu2uQQtbihmnv9tjWc"
      }
    },
    "StartDashjobLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "StartDashjobLambdaVersiong2NQ6LJ0i0ega9pI8Vhjvhm9g5Hj9B1CClyDNRNdEHs"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      }
    }
  }
}
