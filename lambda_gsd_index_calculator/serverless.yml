service: lambda-gsd-index-calculator

custom:
  REGION: eu-central-1
  S3_BUCKET: test-task-update-data-v1
  S3_FILE: test_pretty.json
  S3_FILE_5TASKS: test_5tasks.json
  S3_PREPROCESS_1000TASKS: test_with_description_title_change_1000_single.json
  S3_TEST_RESULT_SUBFOLDER: test_results
  SQS_NAME: PreprocessedDataQueue

provider:
  name: aws
  runtime: nodejs12.x
  region: ${self:custom.REGION}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - s3:ListBucket
        - s3:DeleteObject
        - apigateway:POST
        - sqs:*
        - lambda:InvokeFunction
        - xray:*
        # below for tracing in sls
        # - xray:PutTraceSegments
        # - xray:PutTelemetryRecords
        # - xray:GetSamplingRules
        # - xray:GetSamplingTargets
        # - xray:GetSamplingStatisticSummaries
      Resource: 
        - arn:aws:s3:::${self:custom.S3_BUCKET}/*
        - arn:aws:apigateway:::/*
        - arn:aws:sqs:*:*:${self:custom.SQS_NAME}
        - arn:aws:lambda:${self:custom.REGION}:*:function:*
        - "*"
  # tracing:
  #   apiGateway: true
  #   lambda: true
  #   s3: true


functions:
  # *******************
  # usefull helper functions
  cleanup:
    description: cleanup S3 directories
    handler: src/helper.cleanup
    events:
      - http: GET cleanup
    environment:
      BUCKET: ${self:custom.S3_BUCKET}
  # upload-test-data:
  #   description: creates test data and uploads it to S3 for further processing
  #   handler: src/test-data-generator
  #   events:
  #     - http: PUT generate
  #   environment: 
  #     BUCKET: ${self:custom.S3_BUCKET}
  # *******************
  # FIRST ITERATION: SINGLE LAMBDA
  calculate:
    description: Single lambda - reads S3 file, filters and calculates GSD index function in one run
    handler: handler.calculateGSDIndex
    events:
      - http: GET calculate
    environment:
      BUCKET: ${self:custom.S3_BUCKET}
      FILE: ${self:custom.S3_FILE}
  calculate5:
    description: >
      Same as calculate function:
      Single lambda - 1. reads S3 file (data consists of only 5 tasks + tasks updates),
      2. filters and 3. calculates GSD index function - test data consists of 5 tasks
    handler: handler.calculateGSDIndex
    events:
      - http: GET calculate5
    environment:
      BUCKET: ${self:custom.S3_BUCKET}
      FILE: ${self:custom.S3_FILE_5TASKS}
  # *******************
  # SECOND ITERATION: INTERCONNECTED LAMBDAS WITH SQS AND S3
  preprocess1k:
    description: >
      Preprocess lambda which sends SQS message afterwards:
      preprocess task update data (test data consists of 1000 tasks)
    handler: src/preprocesser.readAndFilterFile
    events:
      - http: 
          path: preprocess1k
          method: post
    environment:
      BUCKET: ${self:custom.S3_BUCKET}
      FILE: ${self:custom.S3_PREPROCESS_1000TASKS}
      RESULT_FOLDER: ${self:custom.S3_TEST_RESULT_SUBFOLDER}
      REGION: ${self:custom.REGION}
      QUEUE_NAME: ${self:custom.SQS_NAME}
  calculate1k:
    description: >
      Single lambda - calulator lambda after receiving sqs message,
      fetch cleaned up test data from S3 and calculates GSD index
    handler: src/calculator.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - PreprocessedDataQueue
              - Arn
    environment:
      BUCKET: ${self:custom.S3_BUCKET}
      RESULT_FOLDER: ${self:custom.S3_TEST_RESULT_SUBFOLDER}
  # *******************
  # THIRD ITERATION: MANAGER WHICH ORCHESTRATES LAMBDAS IN THE JOB
  start-job:
    description: >
      Single endpoint to trigger a job
    handler: src/job_manager.startJob
    events:
      - http: POST start-job

resources:
  Resources:
    PreprocessedDataQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:custom.SQS_NAME}
